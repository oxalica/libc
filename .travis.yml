language: rust
rust: stable
sudo: required
dist: xenial
services: docker

matrix:
  include:
    # stable compat
    - env: TARGET=x86_64-unknown-linux-gnu
      install: true
    - env: TARGET=i686-unknown-linux-gnu
    - os: osx
      env: TARGET=x86_64-apple-darwin
      osx_image: xcode10
      install: true
    - os: osx
      env: TARGET=i686-apple-darwin
      osx_image: xcode10
    - env: TARGET=arm-linux-androideabi
    # - env: TARGET=aarch64-linux-android
    # FIXME(#826) should reenable
    #- env: TARGET=i686-linux-android
    # - env: TARGET=x86_64-linux-android
    - env: TARGET=x86_64-unknown-linux-musl
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=arm-unknown-linux-gnueabihf
    - env: TARGET=arm-unknown-linux-musleabihf
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=aarch64-unknown-linux-musl
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=mips-unknown-linux-musl
    - env: TARGET=mipsel-unknown-linux-musl
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu
    - env: TARGET=sparc64-unknown-linux-gnu
    - env: TARGET=asmjs-unknown-emscripten
    - env: TARGET=wasm32-unknown-emscripten

install: rustup target add $TARGET
script:
  - cargo generate-lockfile --manifest-path libc-test/Cargo.toml
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      sh ci/run-docker.sh $TARGET;
    else
      export CARGO_TARGET_DIR=`pwd`/target;
      sh ci/run.sh $TARGET;
    fi
  - rustc ci/style.rs && ./style src
